<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>找工作的建议</title>
      <link href="/2019/06/16/508-xue-xi-gui-hua/zhao-gong-zuo-de-jian-yi/"/>
      <url>/2019/06/16/508-xue-xi-gui-hua/zhao-gong-zuo-de-jian-yi/</url>
      
        <content type="html"><![CDATA[<p>&emsp;&emsp;转眼两年美好的时光已逝，即将步入社会开始自己的工作，大家都希望找到一个好的工作，这样就能不辜负父母和老师的教诲。<br>我希望可以拿自己找工作的一些经历给大家一点有用的建议。</p><p>&emsp;&emsp;知识方面：基本的面试题还是要刷一遍的，无论是Android还是JAVA方面都需要熟悉一下，很多面试官会问你一些基础的JAVA知识，这个时候考验你基本功的时候就到了，这些基础知识点不仅要会用，还要会表达出来。要对现在开发比较火的框架有一定得了解和使用，<br>如果是开发流行的框架就需要你熟悉的掌握和使用。知识方面主要还是靠大家对这两年学习的累积做一个总结。</p><p>&emsp;&emsp;出去找工作之前，大家需要做一个好的简历，咋们的网站上面有文章教大家怎么做简历，大家可以看一下。简历上要写明一些项目经验这是少不了的，大家可以拿在学校练习的一些项目和参加比赛项目写上去，写清楚自己主要是负责哪一个模块的什么功能并且用到<br>什么技术实现的。面试官很喜欢问你做过的项目中某一模块是怎么实现的，这时候就需要你充分准备一套行云流水的讲解。如果你对这<br>个项目充分了解可以说是自己独立完成的，如果担心有些模块会解释不清楚就告诉面试官这个项目是你和同学两个人合作开发完成的，<br>这时候如果他问到了你忘记怎么开发的模块，你就可以说这一块是你另一个同学写的，下去以后再仔细看看。</p><p>&emsp;&emsp; 简历写完以后需要去投递简历，有一款《BOSS直聘》的APP还是不错的，大家可以把简历放上去，再把自己的一些信息写全放上<br>去这样方便HR了解你的信息，然后安排你去面试。去面试的时候需要把自己简历打印出来一份，面试的时候交给面试官方便向你提问。<br>有时候面试官需要你做一个简短的自我介绍，所以说需要提前准备一下。面试的时候也会遇到让你手写代码，这时候你又需要练习一下<br>自己手写代码的能力。面试官有时候会问你开发中遇到的什么比较难以解决的问题，后来是怎么解决的。你就需要在面试之前准备应对<br>这个问题。通常面试官还会问你一些知识的原理和一些难题的解决办法，这时候就是考验你对知识的掌握程度有多少了，回答不上来也<br>没关系，毕竟面试造航母，工作拧螺丝嘛。把他问你的问题记下来，下去了解以后继续下一轮新的面试。面试问到的问题，基本上都是<br>百度上可以找到的，毕竟面试官也是人，也需要去找一些题来面试。主要还是对自己开发过的项目和模块有充分的了解，这样可以让面<br>试官跟着你的思路走。</p><p>&emsp;&emsp;应聘的时候由于我们是实习的学生，首先遇到的就是没有毕业和没有工作经验的尴尬，公司需要我们有工作经验，但是又不给我们<br>工作，这是件很矛盾的事情。但是没关系，我们只要多去应聘和面试，肯定会找到的。在外找工作首先考虑的就是，到底是先找工作还<br>是先找房子住？先找到工作可以在公司附近找住的比较近的住所，上下班可以轻松很多也会节省时间。如果先找住的地方，可能工作的<br>时候会离公司比较远，但是这样我们可以静下心来，慢慢找到一份心仪的工作。所以无论怎么选择，都是各有利弊。我的建议是偏向先<br>找住的地方，这样你就可以静心找合适的工作，因为我们刚开始找工作，还处于实习和没有工作经验的阶段，可能找工作没有那么快，<br>很容易就会着急去了一份不那么趁心的公司工作。如果工作以后工资低，也不要纠结，因为我们刚出去能找到一份工作也实属不易，关键<br>是我们在工作中学到很多东西，这才是你将来拿到高薪的资本。                 </p><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/找工作的建议.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：黄东东</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>面试资源</title>
      <link href="/2019/05/31/508-xue-xi-gui-hua/mian-shi-zi-yuan/"/>
      <url>/2019/05/31/508-xue-xi-gui-hua/mian-shi-zi-yuan/</url>
      
        <content type="html"><![CDATA[<h3 id="在线简历生成"><a href="#在线简历生成" class="headerlink" title="在线简历生成"></a>在线简历生成</h3><ul><li><a href="https://zety.com/" target="_blank" rel="noopener">简历在线生成</a></li><li><a href="https://flowcv.io/" target="_blank" rel="noopener">简历在线生成</a></li><li><a href="https://juejin.im/book/59e17a7ff265da430629cc4e/section/59faec225188252abc5db42c" target="_blank" rel="noopener">如何写出一份专业的技术简历</a></li></ul><h3 id="面试题"><a href="#面试题" class="headerlink" title="面试题"></a>面试题</h3><ul><li><a href="https://github.com/CyC2018/CS-Notes" target="_blank" rel="noopener">技术面试必备基础知识、Leetcode 题解、后端面试、Java 面试、春招、秋招、操作系统、计算机网络、系统设计</a></li><li><a href="https://github.com/android-exchange/Android-Interview" target="_blank" rel="noopener">Android 开发相关精华面试题</a></li><li><a href="https://github.com/AweiLoveAndroid/CommonDevKnowledge" target="_blank" rel="noopener">BAT大厂Android面试题汇集</a></li><li><a href="https://fe.padding.me/#/" target="_blank" rel="noopener">前端开发面试题</a></li><li><a href="https://github.com/WaltTing/For-jobs" target="_blank" rel="noopener">WEB前端经典面试题</a></li><li><a href="https://huruji.github.io/FE-Interview" target="_blank" rel="noopener">前端面试题大合集</a></li><li><a href="https://github.com/jimuyouyou/node-interview-questions" target="_blank" rel="noopener">Node.js面试题，侧重后端应用与对Node核心的理解</a></li><li><a href="https://github.com/doocs/coding-interview" target="_blank" rel="noopener">互联网公司 IT 技术面试题集</a></li><li><a href="http://blog.poetries.top/2017/03/12/front-end-interview-summary/" target="_blank" rel="noopener">前端面试题整理</a></li><li><a href="https://github.com/liangklfangl/react-article-bucket" target="_blank" rel="noopener">JavaScript各模块核心知识点文章全集</a></li><li><a href="https://juejin.im/search?query=%E9%9D%A2%E8%AF%95%E9%A2%98&amp;type=all" target="_blank" rel="noopener">搜索面试题</a></li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/面试资源.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>508资源列表</title>
      <link href="/2019/05/17/508-xue-xi-gui-hua/xue-xi-zi-yuan/"/>
      <url>/2019/05/17/508-xue-xi-gui-hua/xue-xi-zi-yuan/</url>
      
        <content type="html"><![CDATA[<p align="left">密码: 实验室wifi密码 </p><br><p align="left">提示：请勿大范围传播.</p><h3 id="视频"><a href="#视频" class="headerlink" title="视频"></a>视频</h3><h4 id="计算机语言"><a href="#计算机语言" class="headerlink" title="计算机语言"></a>计算机语言</h4><ul><li>Java<ul><li><a href="https://pan.baidu.com/s/120GBb2gHxSibDyk87-L00A" target="_blank" rel="noopener">提取码：553f</a></li><li><a href="https://pan.baidu.com/s/1Q5Y9i8PofCiNMFnJo4TcLQ" target="_blank" rel="noopener">提取码：qnwv</a></li><li><a href="http://yun.itheima.com/course/7.html" target="_blank" rel="noopener">链接</a></li><li><a href="https://pan.baidu.com/s/1aiFVDAcPVX1xY31Cn5fsJA" target="_blank" rel="noopener">链接1 提取码：s0xe</a></li><li><a href="https://pan.baidu.com/s/1eHL0r1c-kENuZ_jxl6SVqA" target="_blank" rel="noopener">链接2 提取码：ukgt</a></li><li><a href="https://pan.baidu.com/s/1pytJLJ10mWz5dJPO3bjqRg" target="_blank" rel="noopener">提取码：sttr</a></li><li><a href="https://pan.baidu.com/s/1tpTrFGSHw54AFVNBHk2pUg" target="_blank" rel="noopener">提取码：xh09</a></li><li><a href="https://pan.baidu.com/s/1aT0nQTCfVSwMMonKqPNmxA" target="_blank" rel="noopener">提取码：nel8</a></li><li><a href="https://pan.baidu.com/s/1brZu9a1OPUnk8IAF8mfJlQ" target="_blank" rel="noopener">提取码：6ov2</a></li><li><a href="https://pan.baidu.com/s/1lnRZFnTcVH7cw34_S0Q62g" target="_blank" rel="noopener">提取码：577a</a></li><li><a href="https://pan.baidu.com/s/1sK4P0wQPraoqozhrz43Tmg" target="_blank" rel="noopener">提取码：skrl</a></li><li><a href="https://pan.baidu.com/s/1yapV9pfJ7oRbqQnWAwKvJQ" target="_blank" rel="noopener">提取码：llxp</a></li><li><a href="https://pan.baidu.com/s/1JxN8x6AvuyXstkBRpjqGRw" target="_blank" rel="noopener">提取码：8oco</a></li><li><a href="https://pan.baidu.com/s/1-zYXGnyZefpPoB-wdVAgZA" target="_blank" rel="noopener">提取码：slep</a></li></ul></li><li>H5<ul><li><a href="https://pan.baidu.com/s/1GtY9Rkxw7b9MiAd-uAaWGw" target="_blank" rel="noopener">提取码：48r2</a></li><li><a href="https://pan.baidu.com/s/16joCQ3MRj_J_gXrdzXeqjA" target="_blank" rel="noopener">提取码：qk7z</a></li><li><a href="https://pan.baidu.com/s/1tdauUbLWoxLbl63iMJj32w" target="_blank" rel="noopener">提取码：ijpj</a></li></ul></li><li>Python<ul><li><a href="https://pan.baidu.com/s/105aLU5OrsVL7RZjNVeY6sA" target="_blank" rel="noopener">提取码：jxs7</a></li><li><a href="https://pan.baidu.com/s/1JAnXcGwBNcoI6seNrfHdQQ" target="_blank" rel="noopener">提取码：21d3</a></li><li><a href="https://pan.baidu.com/s/10fHQC814OXgqCF3LZtc_dg" target="_blank" rel="noopener">链接1 提取码：zw06</a></li><li><a href="https://pan.baidu.com/s/1-nvoPuZVIphzuRMNhYxEJw" target="_blank" rel="noopener">链接2 提取码：ddtg</a></li></ul></li><li>JavaScript<ul><li><a href="https://pan.baidu.com/s/1uSR5JFrcyyQxSRvxVAK-Kw" target="_blank" rel="noopener">提取码：er3e</a></li></ul></li><li>C#<ul><li><a href="https://pan.baidu.com/s/1D7Ca1BhpwB-emJynGEyISg" target="_blank" rel="noopener">提取码：s3rl</a></li></ul></li><li>C++<ul><li><a href="https://pan.baidu.com/s/18aC9xXH0eYSPs_BskbotSg" target="_blank" rel="noopener">提取码：hu73</a></li><li><a href="https://pan.baidu.com/share/init?surl=vilmLGA09zqhfiT_-hBEFg" target="_blank" rel="noopener">提取码：pvrq</a></li></ul></li><li>go<ul><li><a href="https://pan.baidu.com/s/1Qpdtsabm5Owa_BNEs8aIFw" target="_blank" rel="noopener">提取码：kee9</a></li></ul></li><li>php<ul><li><a href="https://pan.baidu.com/s/1C3SeZAs6a0eltVIcFePJGQ" target="_blank" rel="noopener">提取码:g1yv</a></li><li><a href="https://pan.baidu.com/s/1xAlJ3aN45r6Lg4_4i-bV0Q" target="_blank" rel="noopener">提取码:dpg6</a></li></ul></li></ul><h4 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h4><ul><li><a href="https://pan.baidu.com/s/1sXbQum4pHt6jsp2nj2Pfww" target="_blank" rel="noopener">提取码：6d76</a></li><li><a href="https://pan.baidu.com/s/1MujBOWw1JtrspbSRnm8Rsw" target="_blank" rel="noopener">提取码：8x4t</a></li></ul><h4 id="前端框架"><a href="#前端框架" class="headerlink" title="前端框架"></a>前端框架</h4><ul><li><p>React</p><ul><li><a href="https://pan.baidu.com/s/1VSINPSpCnf1NaG_Td_54Jw" target="_blank" rel="noopener">提取码：9nck</a></li><li><a href="https://pan.baidu.com/s/1EazLVPvw6oe3dYznLkEi0w" target="_blank" rel="noopener">提取码：hwqb</a></li></ul></li><li><p>小程序</p><ul><li><a href="https://pan.baidu.com/s/1UC_lBhc2jZ9ZD6xwzCjfqg" target="_blank" rel="noopener">提取码：8ij1</a></li><li><a href="https://pan.baidu.com/share/init?surl=3f9guMJ_hknQCjCR1KxQ5A" target="_blank" rel="noopener">提取码：3e8n</a></li></ul></li><li><p>其他</p><ul><li><a href="https://github.com/jiangwen5945/Markdown/blob/0796619c91ad7938d7eaf67dfd697ef43a099170/%E5%AD%A6%E6%B5%B7%E6%97%A0%E6%B6%AF.md" target="_blank" rel="noopener">学习资源</a></li></ul></li></ul><h4 id="后端框架"><a href="#后端框架" class="headerlink" title="后端框架"></a>后端框架</h4><ul><li><p>Spring相关</p><ul><li><a href="https://pan.baidu.com/s/1uK6vTDQDZhSYrMqgdeJzsg" target="_blank" rel="noopener">提取码：29jj</a></li><li><a href="https://pan.baidu.com/s/1-r9LLdA56xsHuAfUDZc4IQ" target="_blank" rel="noopener">提取码：psw3</a></li><li><a href="https://pan.baidu.com/s/1AwOR4zwY-nrQcMM_b3kRZA" target="_blank" rel="noopener">提取码：r8vz</a></li><li><a href="https://pan.baidu.com/s/1rMOa1bsuiovN7fCvN-lYkg" target="_blank" rel="noopener">提取码：gjpq</a></li><li><a href="https://pan.baidu.com/s/1jgfmvCauLxMSDhu4ua7PBQ" target="_blank" rel="noopener">提取码：q7a1</a></li><li><a href="https://pan.baidu.com/s/1eqtFOa7N0H1d28RHDzoWFw" target="_blank" rel="noopener">提取码：nib2</a></li><li><a href="https://pan.baidu.com/s/10SToMjxeD8Aovxo3XG61yQ" target="_blank" rel="noopener">提取码：gy2h</a></li><li><a href="https://pan.baidu.com/s/1J2bWOS_rDUOL5gS2XO2j0A" target="_blank" rel="noopener">提取码：ezum</a></li></ul></li><li><p>微服务相关</p><ul><li><a href="https://pan.baidu.com/s/1FOgDm0lJLFg02Wh41Hlaxw" target="_blank" rel="noopener">提取码：yjqz</a></li><li><a href="https://pan.baidu.com/s/1WhY4V-d_FJ2zQcJN3kDz4A" target="_blank" rel="noopener">提取码：smy5</a></li><li><a href="https://pan.baidu.com/s/1G4gHzGIsFqpzSH-1SqKzlQ" target="_blank" rel="noopener">提取码：zeh9</a></li><li><a href="https://pan.baidu.com/s/1Q2YlkDDykXBCZu_7Za0izw" target="_blank" rel="noopener">提取码：wgxv</a></li><li><a href="https://pan.baidu.com/s/14ka88i7wdFvunfTBwDH8dw" target="_blank" rel="noopener">Java单体应用 提取码：2cns</a></li><li><a href="https://pan.baidu.com/s/1zrRwWn11jOQ9EkaXaZ-ldQ" target="_blank" rel="noopener">Java微服务架构(SpringBoot+Dubbo+Zookeeper)：提取码：31lk</a></li><li><a href="https://pan.baidu.com/s/13w5gtlMfkVurZIasYS2IiQ" target="_blank" rel="noopener">dubbo+zookeeper分布式系统架构基础：提取码：lqfw</a></li><li><a href="https://pan.baidu.com/s/1WUrUQaVVhL9uOvF8AyHgRg" target="_blank" rel="noopener">分布式基础知识点教程：提取码：qfxa</a></li><li><a href="https://pan.baidu.com/s/167q2mTSr0A3k5TnRkbFKIA" target="_blank" rel="noopener">cas单点登录解决方案：提取码：e7ad</a></li></ul></li><li><p>Python相关</p><ul><li><a href="https://pan.baidu.com/s/1oSge4dzUUOnJhfysYF77kw" target="_blank" rel="noopener">Django教程：提取码：2673</a></li><li><a href="https://pan.baidu.com/s/1e3whuGgSG4X_gLtWKk2Hyw" target="_blank" rel="noopener">Tornado教程：提取码：1omw</a></li><li><a href="https://pan.baidu.com/s/1zvUN9PfXHlr7Q-gzJzx1bw" target="_blank" rel="noopener">Flask：提取码：vdwo</a></li></ul></li><li><p>PHP相关</p><ul><li><a href="https://github.com/ZoeSj/share_about_IT/blob/8f7457ad413e3ee97ff5e67cb7ab54765a1a8d3a/IT_language/php.md" target="_blank" rel="noopener">学习资料</a></li></ul></li><li><p>游戏</p><ul><li><a href="https://pan.baidu.com/s/1xxrlcHHzFEHV5DFH4SX2cw" target="_blank" rel="noopener">提取码：x0b2</a></li><li><a href="https://pan.baidu.com/s/1Vd95eV-a4vJBqLJwQBcrEw" target="_blank" rel="noopener">提取码：h6xf</a></li><li><a href="https://pan.baidu.com/s/1afdgOytuNQROApKIWJzOYA" target="_blank" rel="noopener">提取码：a3t3</a></li><li><a href="https://pan.baidu.com/s/1z_H-jgMjJ6HusGBitl5P0g" target="_blank" rel="noopener">Netty源码 提取码：865m</a></li></ul></li></ul><h4 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h4><ul><li>Redis<ul><li><a href="https://pan.baidu.com/s/1saR6D5mwlHKwp5eGKh9Yqw" target="_blank" rel="noopener">提取码：xxwr</a>  </li></ul></li><li>Mysql<ul><li><a href="https://pan.baidu.com/s/18qsNOiwfBkA5DfjLbMbY8w" target="_blank" rel="noopener">提取码：bzt9</a> </li><li><a href="https://pan.baidu.com/s/1lYjC5V-YUbiG30CCfF1GAA" target="_blank" rel="noopener">密码：y6m1</a> </li></ul></li><li>其他<ul><li><a href="https://pan.baidu.com/s/18DXFt63tZQRZpDv1gcgW2w" target="_blank" rel="noopener">提取码：b1gn</a>  </li></ul></li></ul><h4 id="爬虫框架"><a href="#爬虫框架" class="headerlink" title="爬虫框架"></a>爬虫框架</h4><ul><li>Python<ul><li><a href="https://pan.baidu.com/s/1wEcSqKA_Ec5CbyBf0CPjcA" target="_blank" rel="noopener">提取码：xg2p</a></li><li><a href="https://pan.baidu.com/s/1uQ-sHnaq7Fphgu06LUkx4Q" target="_blank" rel="noopener">提取码：dzem</a>    </li></ul></li></ul><h4 id="移动端"><a href="#移动端" class="headerlink" title="移动端"></a>移动端</h4><ul><li>Android<ul><li><a href="https://pan.baidu.com/s/1fTsLEsL8cQ5JbVv_311lmw" target="_blank" rel="noopener">提取码：lu5j</a>  </li><li><a href="https://github.com/ZoeSj/share_about_IT/blob/98327cfa5287eb0caf4042cb0280b22dbaf8a9bb/IT_language/Android.md" target="_blank" rel="noopener">学习资料</a></li></ul></li><li>IOS<ul><li><a href="https://pan.baidu.com/s/1AD7oRCa6pcu8BBn8H-Eltw" target="_blank" rel="noopener">提取码：jlud</a> </li></ul></li></ul><h4 id="大数据"><a href="#大数据" class="headerlink" title="大数据"></a>大数据</h4><ul><li>ELK<ul><li><a href="https://pan.baidu.com/s/13rIL_yED4-7NoMQHbSp2gg" target="_blank" rel="noopener">提取码：8916</a> </li><li><a href="https://pan.baidu.com/s/1__S02ciZucQuy38I1YPv1A" target="_blank" rel="noopener">提取码：3cga</a> </li></ul></li><li>Spark<ul><li><a href="https://pan.baidu.com/s/1ZD0Cfh0XQXTwQ9qlv_xBEQ" target="_blank" rel="noopener">提取码：1wky</a></li><li><a href="https://pan.baidu.com/s/1Sbt0rGCObjP9bnjqB7oc0w" target="_blank" rel="noopener">提取码：z64k</a>  </li><li><a href="https://pan.baidu.com/s/1h6oU3gLWfEXxtq4-1PHa7A" target="_blank" rel="noopener">提取码：rw05</a> </li></ul></li><li>Hadoop<ul><li><a href="https://pan.baidu.com/s/1gMrPQKKt04FTsdf6Qc8IZw" target="_blank" rel="noopener">提取码：4p2o</a> </li></ul></li><li>Hive<ul><li><a href="https://pan.baidu.com/s/1I-RsrZPifCfDOFNdJ57-PA" target="_blank" rel="noopener">提取码：rh76</a></li></ul></li><li>Kafka<ul><li><a href="https://pan.baidu.com/share/init?surl=9u1qwiDpzTzSnXOfB0YzlA" target="_blank" rel="noopener">提取码: sq5w</a></li></ul></li><li>其余<ul><li><a href="https://pan.baidu.com/s/1KMFQkD-xkZl1IQcEo3gULw" target="_blank" rel="noopener">提取码：nced</a>  </li><li><a href="https://pan.baidu.com/s/1f4NHCaceCAGgXcQnKHWCmg" target="_blank" rel="noopener">提取码：xn8m </a></li><li><a href="https://pan.baidu.com/s/14XV0Lith2Y2GpZApJeIuWw" target="_blank" rel="noopener">提取码：3iqx</a></li><li><a href="https://pan.baidu.com/s/1sxg0EMBo2Upj3KkeqUdt1w" target="_blank" rel="noopener">提取码：2x28</a></li><li><a href="https://pan.baidu.com/s/1guYk_-gN3cEO3Sfrgf9SPQ" target="_blank" rel="noopener">提取码：cyv0</a></li><li><a href="https://pan.baidu.com/s/1FAp3FB2d8_-2aMXs5cPTqw" target="_blank" rel="noopener">提取码：fsyo</a></li><li><a href="https://pan.baidu.com/s/1IYugvUo_Dd6ztyaN6Jd3uQ" target="_blank" rel="noopener">提取码：qfig</a></li><li><a href="https://pan.baidu.com/s/1hS5TjRxJA_9ERy4D_CgtSg" target="_blank" rel="noopener">提取码：m9z3</a></li><li><a href="https://pan.baidu.com/s/160LOFe7QYWSoZcDsHikung" target="_blank" rel="noopener">提取码：i32g</a></li><li><a href="https://pan.baidu.com/s/1jkbUBgFy1lq_pqMj9PkEWA" target="_blank" rel="noopener">提取码：bvuj</a></li><li><a href="https://pan.baidu.com/s/1SAEHA-R5AO_Y4M6so9z-jQ" target="_blank" rel="noopener">提取码：vzsh</a></li></ul></li></ul><h4 id="AI相关"><a href="#AI相关" class="headerlink" title="AI相关"></a>AI相关</h4><ul><li>机器学习<ul><li><a href="https://pan.baidu.com/s/1uNa-KIOE3C2FYonK6x2YIQ" target="_blank" rel="noopener">提取码：uer0</a>  </li><li><a href="https://pan.baidu.com/s/1mDRU5B5ynTGO1qeKbjIdWw" target="_blank" rel="noopener">提取码：z2ck</a>  </li><li><a href="https://pan.baidu.com/s/1f63V1qX7SwEWwGa7Brd1iQ" target="_blank" rel="noopener">提取码：8dpf</a>  </li><li><a href="https://pan.baidu.com/s/1i3gpkVrrJGzVi3qeD0wmjw" target="_blank" rel="noopener">提取码：vgop</a> </li><li><a href="https://pan.baidu.com/s/1GmOy-iU2hVY5vZ4Zi4Wotg" target="_blank" rel="noopener">提取码：xbz1</a> </li><li><a href="https://pan.baidu.com/s/1bVATlikwGrxu5fb8wIBRPg" target="_blank" rel="noopener">数据分析 提取码：98il</a></li><li><a href="https://pan.baidu.com/s/1QTLUaL8HRwOrErQS5m0sXg" target="_blank" rel="noopener">风控项目 提取码：l4w1</a></li><li><a href="https://pan.baidu.com/s/1C0t4s4gA07w1hJ4G71i4OQ" target="_blank" rel="noopener">量化投资与机器学习 提取码：x6vp </a> </li><li><a href="https://pan.baidu.com/s/1fjXco0x_3If2XsdlZfYsLg" target="_blank" rel="noopener">架构师 提取码：yfj8</a></li><li><a href="https://github.com/doocao/From_GitHub/blob/bf0ed3431984018871ec6cc959c5b980c8c1aa98/MoFan/tutorials/README.md" target="_blank" rel="noopener">学习资源</a></li></ul></li></ul><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>安全<ul><li><a href="https://pan.baidu.com/s/133cxUVeOfsmL1iitdTosyQ" target="_blank" rel="noopener">提取码：vnl3</a>  </li></ul></li><li>树莓派<ul><li><a href="https://pan.baidu.com/s/1fCZcWwFVTDWnHPxvpvXVcg" target="_blank" rel="noopener">提取码：4xom</a>  </li></ul></li><li>版本控制<ul><li><a href="https://pan.baidu.com/s/1pPena21qrwx2nrqYoyIXKQ" target="_blank" rel="noopener">git：提取码：fgz6</a> </li><li><a href="https://pan.baidu.com/s/1pKTRvbnUWx0vncAcqy2BMg" target="_blank" rel="noopener">svn：提取码：jccb</a> </li></ul></li></ul><h3 id="书籍"><a href="#书籍" class="headerlink" title="书籍"></a>书籍</h3><ul><li><a href="https://pan.baidu.com/share/init?surl=JqIWD__oL7OLt1A1fLgwvg" target="_blank" rel="noopener">JavaScript 高级程序设计-提取码：8jmi</a></li><li><a href="https://pan.baidu.com/share/init?surl=tn1mbuOu2-K_nNtd8aP79w" target="_blank" rel="noopener">JavaScript 面向对象编程指南-提取码：5z5x</a></li><li><a href="https://pan.baidu.com/share/init?surl=NKQqIP_F35pG9Vc8L7odOw" target="_blank" rel="noopener">JavaScript 权威指南(6 版)-提取码：0k2h</a></li><li><a href="https://pan.baidu.com/share/init?surl=57lZaa2iF14BLkl0gnqLHw" target="_blank" rel="noopener">JavaScript 语言精粹-提取码：tgha</a></li><li><a href="https://pan.baidu.com/share/init?surl=RamYVxfchr3acCYtgPkP_A" target="_blank" rel="noopener">JavaScript 数据结构与算法-提取码：ors0</a></li><li><a href="https://pan.baidu.com/s/1mlZ4mpid_6Q03K9wePBENQ" target="_blank" rel="noopener">鸟哥的Linux私房菜-链接: 提取码: rjqe</a></li><li><a href="https://pan.baidu.com/s/1XLmyQ-hN_YSpzxrHhmkcTw" target="_blank" rel="noopener">Ubuntu-链接: 提取码: nukw</a> </li><li><a href="https://pan.baidu.com/s/10BnAE22o6POmsqQmZTWmeA" target="_blank" rel="noopener">Linux经典书籍-链接: 提取码: 9yah</a> </li><li><a href="https://pan.baidu.com/s/1sAifePEAMen6FbAqZPTADw" target="_blank" rel="noopener">Linux网络编程-链接: 提取码: x4b3</a> </li><li><a href="https://github.com/postgraduate-rslu/2-RecommendedBooks/blob/854bac84466f07a3eea3baca5e1fb0fc28587fd6/%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80.md" target="_blank" rel="noopener">编程语言</a></li><li><a href="https://github.com/yanbinghu/awesome-programming-books/blob/246b05a0b4796c563a18bc6f351a99d999d6261f/README.md" target="_blank" rel="noopener">计算机各领域经典书籍</a></li><li><a href="https://github.com/luzhengli/my-python/blob/dcb69724e826038d42abb60d76af01dccaa6cb66/README.md" target="_blank" rel="noopener">Python学习资料</a></li></ul><h3 id="bilibili"><a href="#bilibili" class="headerlink" title="bilibili"></a>bilibili</h3><ul><li><a href="https://space.bilibili.com/33824452/video" target="_blank" rel="noopener">Bouncy丶Knight</a>  </li><li><a href="http://space.bilibili.com/98569054/video" target="_blank" rel="noopener">情怀的歌单</a></li></ul><h3 id="数据"><a href="#数据" class="headerlink" title="数据"></a>数据</h3><ul><li><a href="https://github.com/imhuster/Enterprise-Registration-Data-of-Chinese-Mainland" target="_blank" rel="noopener">中国大陆 31 个省份1978 年至 2019 年企业信息</a></li><li><a href="https://github.com/fighting41love/funNLP" target="_blank" rel="noopener">funNLP</a></li><li><a href="https://skymind.ai/wiki/open-datasets" target="_blank" rel="noopener">一些免费的数据集</a></li></ul><h3 id="平台"><a href="#平台" class="headerlink" title="平台"></a>平台</h3><ul><li><a href="http://yun.itheima.com/course" target="_blank" rel="noopener">黑马程序员</a></li><li><a href="https://www.imooc.com/" target="_blank" rel="noopener">慕课网</a></li><li><a href="https://ke.qq.com/" target="_blank" rel="noopener">腾讯课堂</a></li><li><a href="https://study.163.com/" target="_blank" rel="noopener">网易云课堂</a></li><li><a href="https://www.runoob.com/" target="_blank" rel="noopener">菜鸟教程</a></li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/学习资源.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 资源 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机大二下学期学习规划</title>
      <link href="/2019/05/14/508-xue-xi-gui-hua/da-er-xia-xue-qi/"/>
      <url>/2019/05/14/508-xue-xi-gui-hua/da-er-xia-xue-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一个月"><a href="#第一个月" class="headerlink" title="第一个月"></a>第一个月</h3><ul><li>思考你想去的城市,复习之前的东西,将代码部署到服务器</li><li>推荐：<ul><li>北上广深</li><li>其他城市例如: 杭州、太原、郑州等等</li></ul></li><li>推荐云服务器<ul><li><a href="https://www.digitalocean.com/" target="_blank" rel="noopener">无需备案(国外)</a></li><li><a href="https://cn.aliyun.com/" target="_blank" rel="noopener">阿里云</a></li><li><a href="https://cloud.baidu.com/" target="_blank" rel="noopener">百度云</a></li><li><a href="https://cloud.tencent.com/" target="_blank" rel="noopener">腾讯云</a></li></ul></li><li>建议: <ul><li>先去一线城市看看</li><li>成都,西安也不错,但听说实际情况并不太好</li><li>如果学的还可以,就不要去培训机构</li><li>多听听老师们的意见</li><li>学生购买服务器比较便宜</li></ul></li></ul><h3 id="第二个月"><a href="#第二个月" class="headerlink" title="第二个月"></a>第二个月</h3><ul><li><p>开始试着和朋友接一些私活</p></li><li><p>推荐:</p><ul><li>各大QQ群,加一些毕业设计的群</li><li>去论坛之类帮别人解决问题</li><li>到晋城的网络公司找周末或者远程实习的工作</li></ul></li><li><p>推荐框架</p><ul><li><a href="https://elasticsearch.cn/book/elasticsearch_definitive_guide_2.x/" target="_blank" rel="noopener">ElasticSearch</a></li><li><a href="http://spark.apache.org/" target="_blank" rel="noopener">Spark</a></li><li><a href="http://kafka.apache.org/" target="_blank" rel="noopener">kafka</a></li></ul></li><li>建议: <ul><li>学习一下大数据也是不错的选择(学习其中一个就可以了)</li><li>视频可以到实验室中去问一下应该有(视频放在这里可能会有侵权问题)</li></ul></li></ul><h3 id="第三、四个月"><a href="#第三、四个月" class="headerlink" title="第三、四个月"></a>第三、四个月</h3><ul><li><p>好好准备比赛的事情</p></li><li><p>建议</p><ul><li>心态放平,根据老师的进度走</li><li>不参加线下比赛的同学,可以参加一些线上的比赛.或者学习当下热门的技术</li></ul></li></ul><h3 id="第五个月"><a href="#第五个月" class="headerlink" title="第五个月"></a>第五个月</h3><ul><li><p>专升本的同学可以申请留在学校工作一年,找工作的同学背面试题</p></li><li><p>建议</p><ul><li>联系一下高年级的学长外面的情况</li><li>找工作的时候很大一部分是靠运气</li><li>找工作的同学,多在网上看看需要注意的情况</li><li>很多公司招聘上写的是本科以上,但是可以投的</li><li>虽然我们学历不行,但我们技术过关.程序员技术是第一位,508一线城市的学长在一年之内都是过万的工资,二线也是在5到9之间.</li></ul></li><li><p>推荐APP:</p><ul><li>Boss直聘</li><li>拉勾网</li><li>智联招聘</li></ul></li></ul><h3 id="其他学长建议"><a href="#其他学长建议" class="headerlink" title="其他学长建议"></a>其他学长建议</h3><ul><li>找工作的时候一定要能说</li><li>其实大部分开发工作没有新闻上说的那么累</li></ul><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ul><li>如果是508的学生可以邮箱(<a href="mailto:2833324528@qq.com" target="_blank" rel="noopener">2833324528@qq.com</a>)联系我,我邀请你到github组织.即可修改<a href="https://github.com/508laboratory/WebsiteCode" target="_blank" rel="noopener">网站</a>.当然还有github上的组织~~</li><li>希望大家一切顺利</li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/大二下学期.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
            <tag> Spark </tag>
            
            <tag> kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机大二上学期学习规划</title>
      <link href="/2019/05/14/508-xue-xi-gui-hua/da-er-shang-xue-qi/"/>
      <url>/2019/05/14/508-xue-xi-gui-hua/da-er-shang-xue-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一个月"><a href="#第一个月" class="headerlink" title="第一个月"></a>第一个月</h3><ul><li>这个时候选择专升本或者继续学习技术,复习之前的东西</li><li>推荐文档：<ul><li><a href="https://www.zhihu.com/question/37638175?sort=created" target="_blank" rel="noopener">为什么要专升本</a></li></ul></li><li>推荐平台:<ul><li><a href="https://www.katacoda.com/" target="_blank" rel="noopener">在浏览器使用真实环境学习技术</a></li></ul></li><li>建议: <ul><li>强烈建议专升本,有机会可以去好的大学看一下</li><li>大公司只需要985 211的本科,硕士什么的</li><li>当然不论做什么人品和能力才是最重要的</li></ul></li></ul><h3 id="第二个月"><a href="#第二个月" class="headerlink" title="第二个月"></a>第二个月</h3><ul><li><p>总结上一学期的东西,学习一些流行框架</p></li><li><p>推荐框架:</p><ul><li><a href="https://spring.io/projects/spring-boot" target="_blank" rel="noopener">后端-Spring boot</a></li><li><a href="https://eggjs.org/zh-cn/intro/" target="_blank" rel="noopener">后端-Egg.js</a></li><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">前端-Ant Design</a></li><li><a href="https://ice.work/" target="_blank" rel="noopener">前端-阿里飞冰</a></li><li><a href="https://element.eleme.io/#/" target="_blank" rel="noopener">前端-Element</a></li><li><a href="https://reactnative.cn/" target="_blank" rel="noopener">混合开发-React Native</a></li><li><a href="https://threejs.org/" target="_blank" rel="noopener">可视化开发-Three.js</a></li><li><a href="https://nervjs.github.io/taro/" target="_blank" rel="noopener">混合开发-Taro</a></li></ul></li><li>建议: <ul><li>根据自己的情况选择不同的框架</li></ul></li></ul><h3 id="第三个月"><a href="#第三个月" class="headerlink" title="第三个月"></a>第三个月</h3><ul><li>可以学一下Go或者Python</li><li>推荐视频:<ul><li><a href="http://docscn.studygolang.com/" target="_blank" rel="noopener">Go</a></li><li><a href="https://www.zhihu.com/question/19660572" target="_blank" rel="noopener">Python</a></li></ul></li><li>推荐文档<ul><li><a href="https://www.pythontab.com/" target="_blank" rel="noopener">Python在线文档</a></li><li><a href="http://docscn.studygolang.com/doc/" target="_blank" rel="noopener">Go在线文档</a></li></ul></li><li>建议<ul><li>还在学校的时候可以多学习一些语言或者框架</li><li>每个语言或者框架都有他自身的优点与不足</li></ul></li></ul><h3 id="第四个月"><a href="#第四个月" class="headerlink" title="第四个月"></a>第四个月</h3><ul><li>试着看一些系统或者框架的源代码</li><li>推荐:<ul><li>Android</li><li>Spring</li><li>Egg.js</li><li>Ant design pro</li></ul></li><li>建议<ul><li>查看源代码对提升自身软件设计能力有很大的帮助</li><li>看源码是一个很好的习惯,需要保持</li></ul></li></ul><h3 id="第五个月"><a href="#第五个月" class="headerlink" title="第五个月"></a>第五个月</h3><ul><li>多看一些书,比如关于设计模式、面向对象设计之类的</li><li>推荐书籍<ul><li>Head First设计模式</li><li>大话设计模式</li><li>设计模式之禅</li><li><a href="https://github.com/nusr/hacker-laws-zh" target="_blank" rel="noopener">hacker-laws</a></li></ul></li><li>建议<ul><li>可以大概看看,但不要认真.</li><li>也可以买一些关于高级语言的书</li></ul></li></ul><h3 id="其他学长建议"><a href="#其他学长建议" class="headerlink" title="其他学长建议"></a>其他学长建议</h3><ul><li>最主要还是学校的比赛,这个对找工作专升本都有帮助</li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/大二上学期.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 前端 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机大一新生下学期学习规划</title>
      <link href="/2019/05/14/508-xue-xi-gui-hua/da-yi-xia-xue-qi/"/>
      <url>/2019/05/14/508-xue-xi-gui-hua/da-yi-xia-xue-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一个月"><a href="#第一个月" class="headerlink" title="第一个月"></a>第一个月</h3><ul><li>学习linux操作系统</li><li>推荐文档：<ul><li><a href="https://www.runoob.com/linux/linux-tutorial.html" target="_blank" rel="noopener">Linux</a></li><li><a href="https://baike.baidu.com/item/ubuntu%E7%B3%BB%E7%BB%9F/181855" target="_blank" rel="noopener">ubuntu</a></li></ul></li><li>推荐软件:<ul><li><a href="https://www.vmware.com/cn.html" target="_blank" rel="noopener">vmware</a></li></ul></li><li>推荐视频:<ul><li><a href="https://www.bilibili.com/video/av44741175" target="_blank" rel="noopener">王道-操作系统</a></li><li><a href="https://pan.baidu.com/s/1jUbF89pASPQ9QZytoLi83g" target="_blank" rel="noopener">linux 提取码：jnt0 </a></li><li><a href="https://www.bilibili.com/video/av49451932?t=152" target="_blank" rel="noopener">Linux入门、系统服务、高级管理</a></li></ul></li><li>建议: <ul><li><a href="http://releases.ubuntu.com/bionic/" target="_blank" rel="noopener">推荐ubuntu系统桌面版</a></li><li>可以在慕课网或者网易云课堂之类的查看免费视频</li><li>把自己的或者实验室的电脑修改为ubuntu系统,当然也可以使用vmware安装虚拟机.</li></ul></li></ul><h3 id="第二个月"><a href="#第二个月" class="headerlink" title="第二个月"></a>第二个月</h3><ul><li>确认好方向之后开始深入学习,并学习一门数据库</li><li>推荐视频<ul><li><a href="https://www.bilibili.com/video/av50186576/?redirectFrom=h5" target="_blank" rel="noopener">计算机科学CS50-哈佛大学</a></li></ul></li><li>推荐文档:<ul><li><a href="https://developer.android.google.cn/training/basics/firstapp/" target="_blank" rel="noopener">Android-原生</a></li><li><a href="https://flutterchina.club/" target="_blank" rel="noopener">Android-Flutter</a></li><li><a href="https://spring.io/" target="_blank" rel="noopener">Web后端-Spring</a></li><li><a href="http://nqdeng.github.io/7-days-nodejs/" target="_blank" rel="noopener">Web后端-Node.js</a></li><li><a href="http://es6.ruanyifeng.com/" target="_blank" rel="noopener">Web前端-ES6</a></li><li><a href="https://reactjs.org.cn/" target="_blank" rel="noopener">Web前端-React.js</a></li><li><a href="https://cn.vuejs.org/" target="_blank" rel="noopener">Web前端-Vue.js</a></li><li><a href="http://www.scrapyd.cn/" target="_blank" rel="noopener">爬虫-Python</a></li><li><a href="https://zhaoqize.github.io/puppeteer-api-zh_CN/#/?id=%E6%A6%82%E8%BF%B0" target="_blank" rel="noopener">爬虫-Node.js</a></li></ul></li><li>建议: <ul><li>所有的学习建议在ubuntu下</li><li>不论是前端或者后端难度其实是差不多的</li><li>所有的东西以官方文档为标准,写博客或者视频的不一定是正确的</li><li>新手可以使用MySql数据库</li></ul></li></ul><h3 id="第三个月"><a href="#第三个月" class="headerlink" title="第三个月"></a>第三个月</h3><ul><li>根据自己的实际情况选择看视频或者看文档</li><li>推荐视频:<ul><li><a href="https://508laboratory.github.io/2019/05/17/508%E5%AD%A6%E4%B9%A0%E8%A7%84%E5%88%92/%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%BA%90/">参考网站中508资源列表</a></li></ul></li><li>建议<ul><li>有一个朋友和你一起学习讨论是非常重要的</li><li>定期交流学习心得</li></ul></li></ul><h3 id="第四个月"><a href="#第四个月" class="headerlink" title="第四个月"></a>第四个月</h3><ul><li>学习git与github</li><li>推荐文档:<ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600" target="_blank" rel="noopener">git</a></li><li><a href="https://blog.csdn.net/xingkaifan/article/details/81105352" target="_blank" rel="noopener">github</a></li></ul></li><li>建议<ul><li>git是大部分公司都会使用的代码管理工具,在面试时有github账号是会加分的</li><li>学会github会让你搜索资源的能力提升很多</li><li>试着使用github寻找一些好的资源并分享</li></ul></li></ul><h3 id="第五个月"><a href="#第五个月" class="headerlink" title="第五个月"></a>第五个月</h3><ul><li>总结自己学到东西</li><li><p>推荐</p><ul><li>完善新闻客户端加入网页版或者后端</li><li>爬取一些简单的网站</li><li>一起和朋友使用git合作完成一个项目</li></ul></li><li><p>建议</p><ul><li>不要高频率爬虫(爬虫现在很多是犯法的)</li><li>多使用github对找工作是有帮助的</li></ul></li></ul><h3 id="其他学长建议"><a href="#其他学长建议" class="headerlink" title="其他学长建议"></a>其他学长建议</h3><ul><li>这个时候和大二大三的学长参加一些国家级的比赛是非常有帮助的</li></ul><h3 id="一些比赛与博客地址"><a href="#一些比赛与博客地址" class="headerlink" title="一些比赛与博客地址"></a>一些比赛与博客地址</h3><ul><li>博客<ul><li><a href="http://www.cnsoftbei.com/" target="_blank" rel="noopener">CSDN</a></li><li><a href="https://juejin.im" target="_blank" rel="noopener">掘金</a></li><li><a href="https://www.v2ex.com/" target="_blank" rel="noopener">V3EX</a></li><li><a href="https://cnodejs.org/" target="_blank" rel="noopener">CNode社区</a></li><li><a href="https://www.oschina.net/" target="_blank" rel="noopener">开源中国</a></li><li><a href="https://www.infoq.cn/" target="_blank" rel="noopener">InfoQ</a></li><li><a href="http://blog.fondme.cn/apidoc/jdk-1.8-youdao/" target="_blank" rel="noopener">jdk8中文文档</a></li></ul></li><li>比赛<ul><li><a href="http://www.cnsoftbei.com/" target="_blank" rel="noopener">大学生软件杯</a></li><li><a href="http://www.dajiangsai.org/" target="_blank" rel="noopener">发现杯大奖赛</a></li><li><a href="http://cxcy.cnsoftbei.com/" target="_blank" rel="noopener">中国软件杯双创大赛官网</a></li><li><a href="http://www.lanqiao.org/" target="_blank" rel="noopener">蓝桥杯</a></li><li><a href="https://www.pkbigdata.com/common/cmptIndex.html" target="_blank" rel="noopener">DC竞赛</a></li></ul></li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/大一下学期.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 后端 </tag>
            
            <tag> 前端 </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机大一新生上学期学习规划</title>
      <link href="/2019/05/12/508-xue-xi-gui-hua/da-yi-shang-xue-qi/"/>
      <url>/2019/05/12/508-xue-xi-gui-hua/da-yi-shang-xue-qi/</url>
      
        <content type="html"><![CDATA[<h3 id="第一个月"><a href="#第一个月" class="headerlink" title="第一个月"></a>第一个月</h3><ul><li>简单学习C语言,了解计算机基本原理.</li><li>推荐文档：<ul><li>学校的书籍基本就可以了</li><li>不要看的太多</li></ul></li><li>推荐视频<ul><li><a href="https://pan.baidu.com/share/init?surl=pJahIA0jH4rIb3A6tN2VMQ" target="_blank" rel="noopener">基础学习C语言及高级进阶 提取码: i9xq</a></li><li><a href="https://www.bilibili.com/video/av44745390?t=38" target="_blank" rel="noopener">王道-计算机组成原理</a></li></ul></li><li>建议: <ul><li>不必将C语言深入学习</li></ul></li></ul><h3 id="第二个月"><a href="#第二个月" class="headerlink" title="第二个月"></a>第二个月</h3><ul><li>开始学习Java并将实验室中关于Java入门书籍使用电脑实践(至少一本书,抄也没关系)</li><li>推荐书籍<ul><li>Java从入门到放弃~~</li><li>疯狂Java讲义</li><li>Head First Java</li></ul></li><li>推荐视频<ul><li><a href="http://yun.itheima.com/course/7.html" target="_blank" rel="noopener">毕向东Java基础教程</a></li></ul></li><li>建议: <ul><li>这个阶段处于不知道你学的是什么,非常难受,坚持老铁.</li><li>我当时把实验室的两本书抄了一遍(用计算机)</li><li>也可以尝试查看一些网站免费视频,不建议看付费的.</li></ul></li><li>传送门<ul><li><a href="https://www.imooc.com/" target="_blank" rel="noopener">慕课网</a></li><li><a href="https://ke.qq.com/" target="_blank" rel="noopener">腾讯课堂</a></li></ul></li></ul><h3 id="第三个月"><a href="#第三个月" class="headerlink" title="第三个月"></a>第三个月</h3><ul><li>这时需要看Java视频了,进行系统的学习</li><li>推荐视频<ul><li><a href="https://github.com/biezhi/learn-java8" target="_blank" rel="noopener">《跟上 Java 8》视频课程源码</a></li></ul></li><li>建议<ul><li>接受慢的同学重复第二个月的规划</li><li>接受快的同学看把老师给的视频过一遍</li></ul></li></ul><h3 id="第四个月"><a href="#第四个月" class="headerlink" title="第四个月"></a>第四个月</h3><ul><li>结束Java的学习之后，此时你需要选择不同的领域,并复习。</li><li><p>选择</p><ul><li><a href="https://baike.baidu.com/item/Android/60243" target="_blank" rel="noopener">Android开发</a></li><li><a href="https://baike.baidu.com/item/web/150564" target="_blank" rel="noopener">Web开发</a></li><li><a href="https://baike.baidu.com/item/%E5%A4%A7%E6%95%B0%E6%8D%AE/1356941" target="_blank" rel="noopener">大数据开发</a></li></ul></li><li><p>建议</p><ul><li>Android市场需求不如Web,但学校的比赛相对比较重要</li><li>其实软件开发只要学会其中一个,学习其他的速度并不会很慢</li><li>理解面向对象是一个很重要的事情</li></ul></li></ul><h3 id="第五个月"><a href="#第五个月" class="headerlink" title="第五个月"></a>第五个月</h3><ul><li>寒假的你需要的总结与复习</li><li>推荐项目<ul><li>Android计算器或者Java计算器</li><li>Android新闻客户端(只是展示)</li><li>Java简单的聊天系统</li></ul></li><li>推荐代码编辑器<ul><li><a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Idea</a></li><li><a href="https://code.visualstudio.com/" target="_blank" rel="noopener">VsCode</a></li></ul></li><li><p>程序员工资查询</p><ul><li><a href="https://www.lagou.com/" target="_blank" rel="noopener">拉勾网</a></li><li><a href="https://www.zhipin.com/c101280600/" target="_blank" rel="noopener">Boss直聘</a></li><li><a href="https://www.zhaopin.com/" target="_blank" rel="noopener">智联招聘</a></li></ul></li><li><p>建议</p><ul><li>做不出并没有关系,问题永远是你是否能够坚持.</li></ul></li></ul><h3 id="其他学长建议"><a href="#其他学长建议" class="headerlink" title="其他学长建议"></a>其他学长建议</h3><ul><li>看视频 看书这两步因人而异 有的人可能更适合先看视频 然后看书查缺补漏</li><li>学c语言是不是有点太懵啊 面向过程和面向对象不一样，而且C语言基础不深看不懂的</li></ul><h5 id="编辑此页面"><a href="#编辑此页面" class="headerlink" title="编辑此页面"></a><a href="https://github.com/508laboratory/WebsiteCode/edit/master/source/_posts/508学习规划/大一上学期.md" target="_blank" rel="noopener">编辑此页面</a></h5><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 508学习规划 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> C语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最新版ElasticSearch免费加密</title>
      <link href="/2019/05/08/da-shu-ju/zui-xin-ban-elasticsearch-mian-fei-jia-mi/"/>
      <url>/2019/05/08/da-shu-ju/zui-xin-ban-elasticsearch-mian-fei-jia-mi/</url>
      
        <content type="html"><![CDATA[<h3 id="Search-Guard官方地址"><a href="#Search-Guard官方地址" class="headerlink" title="Search Guard官方地址"></a><a href="https://search-guard.com/" target="_blank" rel="noopener">Search Guard官方地址</a></h3><pre class=" language-javascript"><code class="language-javascript">    <span class="token number">1</span><span class="token punctuation">.</span> 下载Es插件：<span class="token punctuation">.</span><span class="token operator">/</span>bin<span class="token operator">/</span>elasticsearch<span class="token operator">-</span>plugin install <span class="token operator">-</span>b search<span class="token operator">-</span>guard版本号    <span class="token number">2</span><span class="token punctuation">.</span>  bash <span class="token operator">/</span>plugins<span class="token operator">/</span>search<span class="token operator">-</span>guard<span class="token number">-7</span><span class="token operator">/</span>tools<span class="token operator">/</span>install_demo_configuration<span class="token punctuation">.</span>sh    <span class="token number">3</span><span class="token punctuation">.</span> <span class="token function">一直输入y</span><span class="token punctuation">(</span>最后一个选项是是否集群模式<span class="token punctuation">,</span>可以选择输入n<span class="token punctuation">)</span>    <span class="token number">4</span><span class="token punctuation">.</span> 启动Es并打开：https<span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token punctuation">:</span><span class="token number">9200</span><span class="token operator">/</span>_searchguard<span class="token operator">/</span>authinfo    <span class="token number">5</span><span class="token punctuation">.</span> 全部同意<span class="token punctuation">,</span>然后输入账号：admin  密码：admin    <span class="token number">6</span><span class="token punctuation">.</span> bash <span class="token operator">/</span>plugins<span class="token operator">/</span>search<span class="token operator">-</span>guard<span class="token number">-7</span><span class="token operator">/</span>tools<span class="token operator">/</span>hash<span class="token punctuation">.</span>sh <span class="token operator">-</span>p 新的密码  <span class="token punctuation">(</span>返回一个加密过的数据<span class="token punctuation">)</span>    <span class="token number">7</span><span class="token punctuation">.</span> 打开 <span class="token operator">/</span>plugins<span class="token operator">/</span>search<span class="token operator">-</span>guard<span class="token number">-7</span><span class="token operator">/</span>sgconfig<span class="token operator">/</span>sg_internal_users<span class="token punctuation">.</span>yml    <span class="token number">8</span><span class="token punctuation">.</span> 找到admin对应hash字段的值并将第六步生产的密码替换    <span class="token number">9</span><span class="token punctuation">.</span> bash <span class="token operator">/</span>plugins<span class="token operator">/</span>search<span class="token operator">-</span>guard<span class="token number">-7</span><span class="token operator">/</span>tools<span class="token operator">/</span>sgadmin_demo<span class="token punctuation">.</span>sh    <span class="token number">10</span><span class="token punctuation">.</span> 重启ES测试密码是否正确</code></pre><ul><li><a href="https://docs.search-guard.com/latest/search-guard-versions" target="_blank" rel="noopener">Es插件版本号查询</a></li></ul><pre class=" language-javascript"><code class="language-javascript">    <span class="token number">1</span><span class="token punctuation">.</span> 下载Kibana插件：<span class="token punctuation">.</span><span class="token operator">/</span>bin<span class="token operator">/</span>kibana<span class="token operator">-</span>plugin install kibana插件地址    <span class="token number">2</span><span class="token punctuation">.</span> 修改config中kibana<span class="token punctuation">.</span>yml添加以下数据    # Use HTTPS instead <span class="token keyword">of</span> HTTP    elasticsearch<span class="token punctuation">.</span>hosts<span class="token punctuation">:</span> <span class="token string">"https://localhost:9200"</span>    # Configure the Kibana internal server user    elasticsearch<span class="token punctuation">.</span>username<span class="token punctuation">:</span> <span class="token string">"kibanaserver"</span>    elasticsearch<span class="token punctuation">.</span>password<span class="token punctuation">:</span> <span class="token string">"kibanaserver"</span>    # Disable SSL verification because we use self<span class="token operator">-</span>signed demo certificates    elasticsearch<span class="token punctuation">.</span>ssl<span class="token punctuation">.</span>verificationMode<span class="token punctuation">:</span> none    # Whitelist the Search Guard Multi Tenancy Header    elasticsearch<span class="token punctuation">.</span>requestHeadersWhitelist<span class="token punctuation">:</span> <span class="token punctuation">[</span> <span class="token string">"Authorization"</span><span class="token punctuation">,</span> <span class="token string">"sgtenant"</span> <span class="token punctuation">]</span>    # 禁止xpack    xpack<span class="token punctuation">.</span>monitoring<span class="token punctuation">.</span>enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    xpack<span class="token punctuation">.</span>graph<span class="token punctuation">.</span>enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    xpack<span class="token punctuation">.</span>ml<span class="token punctuation">.</span>enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    xpack<span class="token punctuation">.</span>watcher<span class="token punctuation">.</span>enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    xpack<span class="token punctuation">.</span>security<span class="token punctuation">.</span>enabled<span class="token punctuation">:</span> <span class="token boolean">false</span>    <span class="token number">3</span><span class="token punctuation">.</span> <span class="token function">启动kibana查看是否需要输入账号密码</span><span class="token punctuation">(</span>Es的账号密码即可<span class="token punctuation">)</span></code></pre><ul><li><a href="https://search.maven.org/search?q=a:search-guard-kibana-plugin" target="_blank" rel="noopener">Kibana插件版本号查询</a></li></ul><p align="right">编写：武杰</p>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ELK </tag>
            
            <tag> 大数据 </tag>
            
            <tag> Search-Guard </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AndroidStudio常用快捷键</title>
      <link href="/2016/09/30/android/androidstudio/"/>
      <url>/2016/09/30/android/androidstudio/</url>
      
        <content type="html"><![CDATA[<h3 id="常用的-Android-Studio-快捷键"><a href="#常用的-Android-Studio-快捷键" class="headerlink" title="常用的 Android Studio 快捷键:"></a>常用的 Android Studio 快捷键:</h3><p>以下是平时在Windwos系统上用Android Studio进行开发时常用到的一些快捷键，虽然不多，但是感觉都还蛮实用的，因此记录下来，如果什么时候不小心忘记了可以拿来翻一翻，That would be very useful！</p><blockquote><p>　　1.Ctrl + B</p></blockquote><p>　　跳入/跳出方法或者资源文件。将鼠标光标定位到某个方法或者资源id的调用处，按Ctrl + B，将会跳入该方法或者资源文件内部，功能等同于Ctrl + 鼠标左键。如果将鼠标光标定位到方法定义处或者资源文件内部，按Ctrl + B将会返回调用处。</p><blockquote><p>　　2.Ctrl + O</p></blockquote><p>　　查看父类中的方法， 并可以选择父类方法进行覆盖。将鼠标光标定位到类中代码的任意位置，按Ctrl + O，将会在打开的面板中查看到所有父类中的所有非私有方法，选择某个方法按Enter即可覆盖父类方法。</p><blockquote><p>　　3.Ctrl + K</p></blockquote><p>　　SVN提交代码。</p><blockquote><p>　　4.Ctrl + T</p></blockquote><p>　　SVN更新代码。</p><blockquote><p>　　5.Ctrl + H</p></blockquote><p>　　查看类的上下继承关系。将鼠标光标定位在类中的任何一个位置，然后按Ctrl + H，将会打开一个面板，在这个面板中会依照层级显示出当前类的所有父类和子类。</p><blockquote><p>　　6.Ctrl + W</p></blockquote><p>　　选中代码块。多次按Ctrl + W将逐步扩大选择范围。</p><blockquote><p>　　7.Ctrl + E</p></blockquote><p>　　显示最近打开的文件，可以快速再次打开这些文件。</p><blockquote><p>　　8.Ctrl + U</p></blockquote><p>　　快速跳转至父类，或者快速跳转到父类中的某个方法。将鼠标光标定位到类名上，按Ctrl +U，将会打开当前类的父类，如果当前类有多个父类，则会提示要打开的父类。如果一个类中的方法覆盖了其父类的方法，那么将鼠标光标定位到子类的方法，按Ctrl + U，将</p><p>会跳转到被覆盖的父类方法中。</p><blockquote><p>　　9.Ctrl + G</p></blockquote><p>　　显示鼠标光标当前位置在代码文件中的行/列数。可以理解为光标在代码中的横纵坐标。</p><blockquote><p>　　10.Ctrl + F12</p></blockquote><p>　　查看类中的所有变量、方法、内部类、内部接口。将鼠标光标定位到当前类文件的任意位置，按Ctrl + F12会弹出显示类中所有变量、方法、内部类、内部接口的对话框，然后按↑↓键可以选择某个变量、方法、内部类、内部接口，接着按Enter可以快速定位到该变</p><p>量、方法、内部类、内部接口。</p><blockquote><p>　　11.Ctrl + F11</p></blockquote><p>　　添加书签。在鼠标光标位置所在行添加书签。如果文件中的代码特别多，那么书签将是一个非常实用的功能，它可以帮助我们标记代码中的重要位置，方便我们下次快速定位到这些重要位置。</p><blockquote><p>　　12.Shift + F11</p></blockquote><p>　　查看书签。可以快速查看之前标记的书签。</p><blockquote><p>　　13.Ctrl + Shift + F12</p></blockquote><p>　　快速调整代码编辑窗口的大小。</p><blockquote><p>　　14.Ctrl + ↑↓</p></blockquote><p>　　固定光标上下移动代码。</p><blockquote><p>　　15.Alt + ↑↓</p></blockquote><p>　　在内部接口、内部类和方法之间跳转。</p><blockquote><p>　　16.Ctrl + Shift + Backspace</p></blockquote><p>　　回到上一次编辑的位置。</p><blockquote><p>　　17.Alt + 数字</p></blockquote><p>　　打开相应数字的面板。如终端控制台面板对应的数字是6，那么按Alt + 6可以快速展开或关闭控制台面板。</p><blockquote><p>　　18.Ctrl + Shift + I</p></blockquote><p>　　快速查看某个方法、类、接口的内容。将鼠标光标定位到某个方法、类名、接口名，然后按Ctrl + Shift + I，将会在当前光标位置显示改方法、类、接口的内容。</p><blockquote><p>　　19.Shift + Esc</p></blockquote><p>　　关闭当前打开的面板。</p><blockquote><p>　　20.Alt + J</p></blockquote><p>　　选择多个相同名字的关键字、方法、类、接口，然后同时更改。</p><blockquote><p>　　21.Ctrl + Tab</p></blockquote><p>　　切换面板或文件，功能类似Windows下的Alt + Tab。在切换面板/文件的对话框中，选中某个面板或文件，接着按Backspace即可关闭改面板或文件。</p><blockquote><p>　　22.trl + Shift + Enter</p></blockquote><p>　　快速补全语句。如if() {}、switch(){}代码块，只要输入if或者switch（甚至sw），接着按Ctrl + Shift + Enter可以快速完形代码块。</p><blockquote><p>　　23.Ctrl + Alt + M</p></blockquote><p>　　快速抽取方法。选中代码块，然后按Ctrl + Alt + M可以快速将选中的代码块抽取为一个方法。</p><blockquote><p>　　24.Ctrl + Alt + T </p></blockquote><p>　　快速包裹代码块。选中一段代码，然后按Ctrl + Alt + T，可以选择要对选中代码块进行的操作，如：if / else、do / while、try / catch / finally等。</p><blockquote><p>　　25.Ctrl  + Alt + L</p></blockquote><p>　　代码格式化。</p><blockquote><p>　　26.Ctrl + N</p></blockquote><p>　　快速查找类。按下Ctrl + N会弹出输入类名的对话框，在对话框的搜索框中输入要查找的类名，即可开始进行模糊检索，这样可以快速找到需要查找的类，这在类文件非常多的工程里面特别实用。</p><blockquote><p>　　27.Ctrl + Shift + N</p></blockquote><p>　　快速查找文件。功能和Ctrl + N类似，但是除了可以搜索类文件之外，还可以搜索当前工程下的所有文件，这同样是一个经常用到的特别实用的功能。</p><blockquote><p>　　28.Double Shift</p></blockquote><p>　　全局搜索。功能和Ctrl + N、Ctrl + Shift + N类似，但是搜索的范围更广，支持符号检索，除了Ctrl + N、Ctrl + Shift + N的检索内容外，还可以搜索到变量、资源id等。</p><blockquote><p>　　29.Ctrl + Alt + Space</p></blockquote><p>　　类名或接口名提示。输入一个不完整的类名或者接口名，按Ctrl + Alt + Space，会给出完整类名或接口名的提示。</p><blockquote><p>　　30.Ctrl  + Q</p></blockquote><p>　　显示注释文档。将鼠标光标定位到某个类名、接口名或者方法名，按Ctrl + Q，会显示出该类、接口、方法的注释。</p><blockquote><p>　　31.Ctrl + PageUp/PageDown</p></blockquote><p>　　将光标定位到当前文件的第一行/最后一行。</p><blockquote><p>　　32.Shift + Left Click（当前文件的选项卡）</p></blockquote><p>　　关闭当前文件。</p><blockquote><p>　　33.Ctrl + Alt + B　　</p></blockquote><p>　　跳转到抽象方法的实现。将鼠标光标定位到某个抽象方法，然后按Ctrl + Alt + B，会快速跳转到该抽象方法的具体实现处，如果该抽象方法有多个具体实现，那么会弹出选择框进行选择。</p><blockquote><p>　　34.Ctrl + Shift + U </p></blockquote><p>　　快速进行大小写转换。</p><blockquote><p>　　35.Ctrl + Shift + Alt + S</p></blockquote><p>　　打开Project Structure面板。</p><blockquote><p>　　36.Ctrl + F</p></blockquote><p>　　在当前文件中搜索输入的内容。</p><blockquote><p>　　37.Ctrl + R</p></blockquote><p>　　在当前文件中替换输入的内容。</p><blockquote><p>　　38.Ctrl + Shift + F</p></blockquote><p>　　全局搜索。</p><blockquote><p>　　39.Ctrl + Shift + R</p></blockquote><p>　　全局替换。</p><blockquote><p>　　40.Shift + F6</p></blockquote><p>　　快速重命名。选中某个类、变量、资源id等之后，可以快速重命名，只要改动一个位置，其它地方也都会自动全部重命名。</p><blockquote><p>　　41.Alt + F7</p></blockquote><p>　　快速查找某个类、方法、变量、资源id被调用的地方。</p><blockquote><p>　　42.Ctrl +Shift + Alt + I</p></blockquote><p>　　对项目进行审查。按下Ctrl +Shift + Alt + I，会弹出搜索审查项的输入框，输入关键字可以检索需要审查的内容，例如输入unused resource即可搜索项目中没有使用到的资源文件。此外，在菜单栏选择Analyze—Inspect Code或者鼠标右键点击当前工程— 　Analyze—Inspect Code，可以对项目进行Lint审查。</p><blockquote><p>　　43.Ctrl + D</p></blockquote><p>　　快速复制行。</p><blockquote><p>　　44.Ctrl + Shift + ↑↓</p></blockquote><p>　　上下移动代码。如果是方法中的代码，只能在方法内部一定，不能跨方法。</p><blockquote><p>　　45.Shift + Alt + ↑↓</p></blockquote><p>　　上下移动代码。可以跨方法移动。</p><blockquote><p>　　46.Shift + F10</p></blockquote><p>　　启动Module。</p><blockquote><p>　　47.Shift + F9</p></blockquote><p>　　调试Module。</p><blockquote><p>　　48.Ctrl + F9</p></blockquote><p>　　Make Project。</p><blockquote><p>　　49.Alt + Insert</p></blockquote><p>　　快速插入代码。可以快速生成构造方法、Getter/Setter方法等。</p><blockquote><p>　　50.Alt + Enter</p></blockquote><p>　　快速修复错误。</p><p align="right">编写：栗郑辉</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Activity生命周期</title>
      <link href="/2016/09/27/android/activity/"/>
      <url>/2016/09/27/android/activity/</url>
      
        <content type="html"><![CDATA[<p>Activity恐怕是Android用得最多且是最基本的组件了，估计也是每个学Android的人接触的第一概念，Activity的生命周期与启动模式是作为一个Android开发程序员必要掌握内容 ， 还希望本篇文章对您有所帮助。</p><h3 id="Activity的形态"><a href="#Activity的形态" class="headerlink" title="Activity的形态"></a>Activity的形态</h3><p> <strong>Active/Running:</strong> Activity处于活动状态，此时Activity处于栈顶，是可见状态，可与用户进行交互。 </p><p><strong>Paused：</strong> 当Activity失去焦点时，或被一个新的非全屏的Activity，或被一个透明的Activity放置在栈顶时，Activity就转化为Paused状态。但我们需要明白，此时Activity只是失去了与用户交互的能力，其所有的状态信息及其成员变量都还存在，只有在系统内存紧张的情况下，才有可能被系统回收掉。 </p><p><strong>Stopped： </strong>当一个Activity被另一个Activity完全覆盖时，被覆盖的Activity就会进入Stopped状态，此时它不再可见，但是跟Paused状态一样保持着其所有状态信息及其成员变量。 </p><p><strong>Killed： </strong>当Activity被系统回收掉时，Activity就处于Killed状态。 </p><h3 id="Activity-的生命周期"><a href="#Activity-的生命周期" class="headerlink" title="Activity 的生命周期"></a>Activity 的生命周期</h3><p>Activity 类中定义了七回调方法，覆盖了活动生命周期的每一个环节，从启动到销毁的过程中只有当我们熟练的掌握了它的生命周期才能在它的回调方法中做合适的事情,先为大家献上一张生命周期图，供大家参考<br>  <img src="http://pic001.cnblogs.com/img/tea9/201008/2010080516521645.png" alt></p><p><strong>onCreate:</strong> 该方法是我们见到最多的回调方法,是在Activity被创建时回调，它是生命周期第一个调用的方法，我们在创建Activity时一般都需要重写该方法，然后在该方法中做一些初始化的操作，如通过setContentView设置界面布局的资源，初始化所需要的组件信息等。 </p><p><strong>onStart:</strong> 此方法被回调时表示Activity正在启动，此时Activity已处于可见状态，只是还没有在前台显示，因此无法与用户进行交互。可以简单理解为Activity已显示而我们无法看见摆了。<br>onResume : 当此方法回调时，则说明Activity已在前台可见，可与用户交互了（处于前面所说的Active/Running形态），onResume方法与onStart的相同点是两者都表示Activity可见，只不过onStart回调时Activity还是后台无法与用户交互，而onResume则已显示在前台，可与用户交互。当然从流程图，我们也可以看出当Activity停止后（onPause方法和onStop方法被调用），重新回到前台时也会调用onResume方法，因此我们也可以在onResume方法中初始化一些资源，比如重新初始化在onPause或者onStop方法中释放的资源。</p><p><strong>onPause:</strong> 此方法被回调时则表示Activity正在停止（Paused形态），一般情况下onStop方法会紧接着被回调。但通过流程图我们还可以看到一种情况是onPause方法执行后直接执行了onResume方法，这属于比较极端的现象了，这可能是用户操作使当前Activity退居后台后又迅速地再回到到当前的Activity，此时onResume方法就会被回调。当然，在onPause方法中我们可以做一些数据存储或者动画停止或者资源回收的操作，但是不能太耗时，因为这可能会影响到新的Activity的显示——onPause方法执行完成后，新Activity的onResume方法才会被执行。</p><p><strong>onStop:</strong>  一般在onPause方法执行完成直接执行，表示Activity即将停止或者完全被覆盖（Stopped形态），此时Activity不可见，仅在后台运行。同样地，在onStop方法可以做一些资源释放的操作（不能太耗时）。 </p><p><strong>onRestart:</strong> 表示Activity正在重新启动，当Activity由不可见变为可见状态时，该方法被回调。这种情况一般是用户打开了一个新的Activity时，当前的Activity就会被暂停（onPause和onStop被执行了），接着又回到当前Activity页面时，onRestart方法就会被回调。<br>onDestroy :此时Activity正在被销毁，也是生命周期最后一个执行的方法，一般我们可以在此方法中做一些回收工作和最终的资源释放。 </p><h3 id="Activity的四种启动模式"><a href="#Activity的四种启动模式" class="headerlink" title="Activity的四种启动模式"></a>Activity的四种启动模式</h3><ol><li><p>Standard模式（默认）</p><p> 我们平时直接创建的Activity都是这种模式的Activity，这种模式的Activity的特点是：只要你创建了Activity实例，一旦激活该Activity，则会向任务栈中加入新创建的实例，退出Activity则会在任务栈中销毁该实例。</p></li></ol><ol start="2"><li><p>SingleTop模式</p><p> 这种模式会考虑当前要激活的Activity实例在任务栈中是否正处于栈顶，如果处于栈顶则无需重新创建新的实例，会重用已存在的实例，否则会在任务栈中创建新的实例。</p></li></ol><ol start="3"><li><p>SingleTask模式</p><p>如果任务栈中存在该模式的Activity实例，则把栈中该实例以上的Activity实例全部移除，调用该实例的newInstance()方法重用该Activity，使该实例处於栈顶位置，否则就重新创建一个新的Activity实例。</p></li></ol><ol start="4"><li><p>SingleInstance模式</p><p>SingleInstance启动模式非常特殊,Activity会运行在自己的任务栈中,并且这个任务栈中只有一个实例存在,如果你想保证手机系统中只有一个实例存在那么可以使用这种启动方式<br>应用场景：手机来电</p></li></ol><h3 id="如何更改Activity的启动模式"><a href="#如何更改Activity的启动模式" class="headerlink" title="如何更改Activity的启动模式:"></a>如何更改Activity的启动模式:</h3><pre><code>   打开AndroidManifest.xml配置文件,    找到对应的Activity  配置 android:launchMode=&quot;&quot; 更改自己所要更改的启动模式即可</code></pre><p><img src="http://img.blog.csdn.net/20180402102141784?watermark/2/text/aHR0cDovL2Jsb2cuY3Nkbi5uZXQveGlhb2h1YW5nbml1MTM=/font/5a6L5L2T/fontsize/400/fill/I0JBQkFCMA==/dissolve/70/gravity/SouthEast" alt="如何更改Activity的启动模式"></p><p align="right">编写：栗郑辉</p>]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 设计模式 -   单例模式</title>
      <link href="/2016/09/26/java/java-dan-li-she-ji-mo-shi/"/>
      <url>/2016/09/26/java/java-dan-li-she-ji-mo-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="JAVA设计模式-单例模式"><a href="#JAVA设计模式-单例模式" class="headerlink" title="JAVA设计模式 - 单例模式"></a>JAVA设计模式 - 单例模式</h3><hr><p>  单例模式（Singleton Pattern）是 Java 中最简单的设计模式之一。这种类型的设计模式属于创建型模式，它提供了一种创建对象的最佳方式。</p><p>  这种模式涉及到一个单一的类，该类负责创建自己的对象，同时确保只有单个对象被创建。这个类提供了一种访问其唯一的对象的方式，可以直接访问，不需要实例化该类的对象。</p><h3 id="饿汉式单例模式"><a href="#饿汉式单例模式" class="headerlink" title="饿汉式单例模式"></a>饿汉式单例模式</h3><pre><code>public class Singleton{    //内部创建静态对象    private static Singleton instance=new Singleton();    //私有化构造函数    private Singleton(){}    //静态方法返回实例    pulic static Singleton getInstance(){        return instance;    }  }</code></pre><blockquote><p>特点：饿汉式会提前进行实例化，没有延迟加载，不管是否使用都会有一个已经初始化的实例在内存中，但不会出现懒汉式中的多线程问题。</p></blockquote><h3 id="懒汉式单例模式"><a href="#懒汉式单例模式" class="headerlink" title="懒汉式单例模式"></a>懒汉式单例模式</h3><pre><code>  public class Singleton{    private static Singleton instance;    private Singleton(){}    public static Singleton getInstance(){        //此处为空的判断如果不加线程锁,会出现线程安全问题        if(instance==null)            return instance=new Singleton();        else            return instance;    }  }</code></pre><blockquote><p>特点：实现了延迟加载，但在多线程情况下可能会出现问题，不能保证线程安全。</p></blockquote><h3 id="确保线程安全的懒汉式单例模式"><a href="#确保线程安全的懒汉式单例模式" class="headerlink" title="确保线程安全的懒汉式单例模式"></a>确保线程安全的懒汉式单例模式</h3><pre><code>  public class Singleton{    private static Singleton instance;    private Singleton(){}    public static sychronized Singleton getInstance(){        if(instance==null)            return instance=new Singleton();        else            return instance;    }  }</code></pre><blockquote><p>特点：synchronized限制了整个getInstance方法的完成执行</p></blockquote><h3 id="静态内部类的单例模式"><a href="#静态内部类的单例模式" class="headerlink" title="静态内部类的单例模式"></a>静态内部类的单例模式</h3><pre><code>  public class Singleton{    private Singleton(){}    private static class Inner{        private static Singleton instanceHolder=new Singleton();    }    public static Singleton getInstacen(){        return Inner.instanceHolder;    }  }</code></pre><blockquote><p>特点:由于内部类在编译完成后也是一个单独的class文件，因此在不使用的情况下Inner类是不会被加载的。同时，JVM保证在类加载的过程中static代码块在多线程或者单线程下都正确执行，且仅执行一次。解决了延迟加载以及线程安全的问题。</p></blockquote><p align="right">编写：栗郑辉</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java 设计模式 -   工厂模式</title>
      <link href="/2016/09/25/java/java-gong-han-she-ji-mo-shi/"/>
      <url>/2016/09/25/java/java-gong-han-she-ji-mo-shi/</url>
      
        <content type="html"><![CDATA[<h3 id="JAVA设计模式-工厂模式"><a href="#JAVA设计模式-工厂模式" class="headerlink" title="JAVA设计模式 - 工厂模式"></a>JAVA设计模式 - 工厂模式</h3><hr><p>简单工厂的定义：提供一个创建对象实例的功能，而无须关心其具体实现。被创建实例的类型可以是接口、抽象类，也可以是具体的类</p><h3 id="实现汽车接口"><a href="#实现汽车接口" class="headerlink" title="实现汽车接口"></a>实现汽车接口</h3><pre><code>public interface Car {    String getName();&lt;strong&gt;}&lt;/strong&gt;</code></pre><h3 id="奔驰类"><a href="#奔驰类" class="headerlink" title="奔驰类"></a>奔驰类</h3><pre><code>public class Benz implements Car {    @Override    public String getName() {        return &quot;Benz&quot;;    }}</code></pre><h3 id="宝马类"><a href="#宝马类" class="headerlink" title="宝马类"></a>宝马类</h3><pre><code>public class BMW implements Car {    @Override    public String getName() {        return &quot;BMW&quot;;    }}</code></pre><h3 id="简单工厂，既能生产宝马又能生产奔驰"><a href="#简单工厂，既能生产宝马又能生产奔驰" class="headerlink" title="简单工厂，既能生产宝马又能生产奔驰"></a>简单工厂，既能生产宝马又能生产奔驰</h3><pre><code>public class SimpleFactory {    public Car getCar(String name){        if (name.equals(&quot;BMW&quot;)){            return new BMW();        }else if (name.equals(&quot;benz&quot;)){            return new Benz();        }else {            System.out.println(&quot;不好意思，这个品牌的汽车生产不了&quot;);            return null;        }    }}</code></pre><h3 id="测试类"><a href="#测试类" class="headerlink" title="测试类"></a>测试类</h3><pre><code>public class SimpleFactoryTest {    public static void main(String[] args){        SimpleFactory simpleFactory = new SimpleFactory();        Car car = simpleFactory.getCar(&quot;BMW&quot;);        System.out.println(car.getName());    }}</code></pre><h3 id="测试结果"><a href="#测试结果" class="headerlink" title="测试结果"></a>测试结果</h3><pre><code>BMW</code></pre><hr><p>根据简单工厂的定义，用户只要产品而不在乎产品如何生产，看起来好像很完美的样子。但大家想想，这个世界存在什么都生产的工厂吗？</p><p>显然是不存在的，每一个汽车品牌都有自己的生产工厂，都有自己生产技术。映射到spring框架中，我们有很多很多种的bean需要生产，如果只依靠一个简单工厂来实现，那么我们得在工厂类中嵌套多少个if..else if啊？</p><p>而且我们在代码中生产一辆汽车只是new一下就出来了，但实际操作中却不知道需要进行多少操作，加载、注册等操作都将体现在工厂类中，那么这个类就会变得紊乱，管理起来也很不方便，所以说每个品牌应该有自己的生产类。</p><p>因为专一，所以专业嘛，这个时候工厂方法就出现了。</p><h3 id="二、工厂方法"><a href="#二、工厂方法" class="headerlink" title="二、工厂方法"></a>二、工厂方法</h3><h3 id="工厂接口"><a href="#工厂接口" class="headerlink" title="工厂接口"></a>工厂接口</h3><pre><code>//定义一个工厂接口，功能就是生产汽车public interface Factory {    Car getCar();}</code></pre><h3 id="奔驰工厂"><a href="#奔驰工厂" class="headerlink" title="奔驰工厂"></a>奔驰工厂</h3><pre><code>public class BenzFactory implements Factory {    @Override    public Car getCar() {        return new Benz();    }}</code></pre><h3 id="宝马工厂"><a href="#宝马工厂" class="headerlink" title="宝马工厂"></a>宝马工厂</h3><pre><code>public class BMWFactory implements Factory{    @Override    public Car getCar() {        return new BMW();    }}</code></pre><h3 id="测试类-1"><a href="#测试类-1" class="headerlink" title="测试类"></a>测试类</h3><pre><code>public class FactoryTest {   public static void main(String[] args){       Factory bmwFactory = new BMWFactory();       System.out.println(bmwFactory.getCar().getName());       Factory benzFactory = new BenzFactory();       System.out.println(benzFactory.getCar().getName());   }}</code></pre><h3 id="测试结果-1"><a href="#测试结果-1" class="headerlink" title="测试结果"></a>测试结果</h3><pre><code>BMWBenz</code></pre><hr><p>根据上述代码可以看出，不同品牌的汽车是由不同的工厂生产的，貌似又是很完美的。但大家看一下测试类，当一个人想要去买一辆宝马汽车的时候（假设没有销售商），那么他就要去找宝马工厂给他生产一辆，过几天又想要买一辆奔驰汽车的时候，又得跑到奔驰工厂请人生产，这无疑就增加了用户的操作复杂性。所以有没有一种方便用户操作的方法呢？这个时候抽象工厂模式就出现了。</p><h3 id="三、抽象工厂"><a href="#三、抽象工厂" class="headerlink" title="三、抽象工厂"></a>三、抽象工厂</h3><h3 id="抽象工厂"><a href="#抽象工厂" class="headerlink" title="抽象工厂"></a>抽象工厂</h3><pre><code>public abstract class AbstractFactory {     protected abstract Car getCar();     //这段代码就是动态配置的功能     //固定模式的委派     public Car getCar(String name){        if(&quot;BMW&quot;.equalsIgnoreCase(name)){            return new BmwFactory().getCar();        }else if(&quot;Benz&quot;.equalsIgnoreCase(name)){            return new BenzFactory().getCar();        }else if(&quot;Audi&quot;.equalsIgnoreCase(name)){            return new AudiFactory().getCar();        }else{            System.out.println(&quot;这个产品产不出来&quot;);            return null;        }    }}</code></pre><h3 id="默认工厂"><a href="#默认工厂" class="headerlink" title="默认工厂"></a>默认工厂</h3><pre><code>public class DefaultFactory extends AbstractFactory {    private AudiFactory defaultFactory = new AudiFactory();    public Car getCar() {        return defaultFactory.getCar();    }}</code></pre><h3 id="宝马工厂-1"><a href="#宝马工厂-1" class="headerlink" title="宝马工厂"></a>宝马工厂</h3><pre><code>public class BMWFactory extends AbstractFactory {    @Override    public Car getCar() {        return new BMW();    }}</code></pre><h3 id="奔驰工厂-1"><a href="#奔驰工厂-1" class="headerlink" title="奔驰工厂"></a>奔驰工厂</h3><pre><code>public class BenzFactory extends AbstractFactory {    @Override    public Car getCar() {        return new Benz();    }}</code></pre><h3 id="测试类-2"><a href="#测试类-2" class="headerlink" title="测试类"></a>测试类</h3><pre><code>public class AbstractFactoryTest {    public static void main(String[] args) {                DefaultFactory factory = new DefaultFactory();  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;在此我向大家推荐一个架构学习交流圈：830478757        System.out.println(factory.getCar(&quot;Benz&quot;).getName());                }}</code></pre><h3 id="测试结果-2"><a href="#测试结果-2" class="headerlink" title="测试结果"></a>测试结果</h3><pre><code>Benz</code></pre><hr><p>根据上述代码可以看出，用户需要一辆汽车，只需要去找默认的工厂提出自己的需求（传入参数），便能得到自己想要产品，而不用根据产品去寻找不同的生产工厂，方便用户操作。</p><p>按我粗浅的理解，设计模式的经典之处，就在于解决了编写代码的人和调用代码的人双方的痛楚，不同的设计模式也只适用于不同的场景。至于用或者不用，如何使用，那就需要各位看官着重考虑了。</p><p>但为了使用而使用是不应该的，细微之处，只有留给大家慢慢品味了。</p><p align="right">编写：栗郑辉</p>]]></content>
      
      
      <categories>
          
          <category> 设计模式 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
